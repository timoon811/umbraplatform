"use client";

import { useState, useEffect } from "react";
import Link from "next/link";

// –¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö
interface Category {
  id: string;
  key: string;
  name: string;
  description: string;
  articlesCount: number;
  order: number;
  isActive: boolean;
  createdAt: string;
  updatedAt: string;
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
export default function CategoriesManagementPage() {
  const [categories, setCategories] = useState<Category[]>([]);

  const [loading, setLoading] = useState(true);
  const [editingCategory, setEditingCategory] = useState<Category | null>(null);
  const [isAddingNew, setIsAddingNew] = useState(false);
  const [newCategory, setNewCategory] = useState({
    key: "",
    name: "",
    description: "",
    order: 5,
  });

  // –ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏–∑ –ë–î
  const loadCategories = async () => {
    try {
      const response = await fetch("/api/admin/articles/categories");
      if (response.ok) {
        const categoriesData: Category[] = await response.json();
        setCategories(categoriesData);
      } else {
        console.error("Failed to load categories");
      }
    } catch (error) {
      console.error("Error loading categories:", error);
    } finally {
      setLoading(false);
    }
  };

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ—Ä—è–¥–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
  const saveOrder = async () => {
    try {
      const response = await fetch("/api/admin/articles/categories", {
        method: "PUT",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ categories }),
      });

      if (response.ok) {
        alert("–ü–æ—Ä—è–¥–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å–æ—Ö—Ä–∞–Ω–µ–Ω!");
      } else {
        alert("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ—Ä—è–¥–∫–∞");
      }
    } catch (error) {
      console.error("Error saving order:", error);
      alert("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ—Ä—è–¥–∫–∞");
    }
  };

  // –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  const moveCategory = (index: number, direction: "up" | "down") => {
    const newCategories = [...categories];
    const targetIndex = direction === "up" ? index - 1 : index + 1;
    
    if (targetIndex >= 0 && targetIndex < categories.length) {
      // –ú–µ–Ω—è–µ–º –º–µ—Å—Ç–∞–º–∏
      [newCategories[index], newCategories[targetIndex]] = 
      [newCategories[targetIndex], newCategories[index]];
      
      // –û–±–Ω–æ–≤–ª—è–µ–º order
      newCategories[index].order = index + 1;
      newCategories[targetIndex].order = targetIndex + 1;
      
      setCategories(newCategories);
    }
  };

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  const updateCategory = (category: Category) => {
    setCategories(prev => 
      prev.map(cat => cat.key === category.key ? category : cat)
    );
    setEditingCategory(null);
  };

  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  const addCategory = async () => {
    if (!newCategory.key || !newCategory.name) {
      alert("–ö–ª—é—á –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã");
      return;
    }

    try {
      const response = await fetch("/api/admin/articles/categories", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          key: newCategory.key,
          name: newCategory.name,
          description: newCategory.description,
          order: newCategory.order,
        }),
      });

      if (response.ok) {
        setNewCategory({ key: "", name: "", description: "", order: categories.length + 1 });
        setIsAddingNew(false);
        // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        loadCategories();
      } else {
        const errorData = await response.json();
        alert(`–û—à–∏–±–∫–∞: ${errorData.error || "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é"}`);
      }
    } catch (error) {
      console.error("Error creating category:", error);
      alert("–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏");
    }
  };

  // –£–¥–∞–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  const deleteCategory = async (categoryKey: string) => {
    const category = categories.find(cat => cat.key === categoryKey);
    if (!category) return;

    if (category.articlesCount > 0) {
      alert(`–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é "${category.name}". –í –Ω–µ–π –µ—Å—Ç—å ${category.articlesCount} —Å—Ç–∞—Ç–µ–π.`);
      return;
    }

    if (!confirm(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é "${category.name}"?`)) {
      return;
    }

    setCategories(prev => prev.filter(cat => cat.key !== categoryKey));
  };

  useEffect(() => {
    loadCategories();
  }, []);

  return (
    <div className="space-y-6">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4">
        <div>
          <h1 className="text-2xl font-bold text-[#171717] dark:text-[#ededed]">
            –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
          </h1>
          <p className="text-sm text-[#171717]/60 dark:text-[#ededed]/60 mt-1">
            –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –ø–æ—Ä—è–¥–æ–∫ –∏—Ö –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
          </p>
        </div>
        <div className="flex gap-2">
          <Link
            href="/admin/articles"
            className="px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors"
          >
            ‚Üê –ö —Å—Ç–∞—Ç—å—è–º
          </Link>
          <button
            onClick={() => setIsAddingNew(true)}
            className="px-4 py-2 rounded-lg text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 transition-colors"
          >
            ‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é
          </button>
          <button
            onClick={saveOrder}
            className="px-4 py-2 rounded-lg text-sm font-medium text-white bg-green-600 hover:bg-green-700 transition-colors"
          >
            üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–æ—Ä—è–¥–æ–∫
          </button>
        </div>
      </div>

      {/* –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
      {isAddingNew && (
        <div className="bg-white dark:bg-[#0a0a0a] rounded-lg border border-[#171717]/5 dark:border-[#ededed]/10 p-6">
          <h2 className="text-lg font-semibold text-[#171717] dark:text-[#ededed] mb-4">
            –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
          </h2>
          
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
            <div>
              <label className="block text-sm font-medium text-[#171717] dark:text-[#ededed] mb-1">
                –ö–ª—é—á –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ *
              </label>
              <input
                type="text"
                value={newCategory.key}
                onChange={(e) => setNewCategory(prev => ({ ...prev, key: e.target.value }))}
                className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-800 text-[#171717] dark:text-[#ededed]"
                placeholder="my-category"
              />
              <p className="text-xs text-[#171717]/60 dark:text-[#ededed]/60 mt-1">
                –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ URL –∏ –∫–æ–¥–µ (—Ç–æ–ª—å–∫–æ –ª–∞—Ç–∏–Ω–∏—Ü–∞, —Ü–∏—Ñ—Ä—ã, –¥–µ—Ñ–∏—Å—ã)
              </p>
            </div>

            <div>
              <label className="block text-sm font-medium text-[#171717] dark:text-[#ededed] mb-1">
                –ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ *
              </label>
              <input
                type="text"
                value={newCategory.name}
                onChange={(e) => setNewCategory(prev => ({ ...prev, name: e.target.value }))}
                className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-800 text-[#171717] dark:text-[#ededed]"
                placeholder="–ú–û–Ø –ö–ê–¢–ï–ì–û–†–ò–Ø"
              />
            </div>

            <div className="md:col-span-2">
              <label className="block text-sm font-medium text-[#171717] dark:text-[#ededed] mb-1">
                –û–ø–∏—Å–∞–Ω–∏–µ
              </label>
              <textarea
                value={newCategory.description}
                onChange={(e) => setNewCategory(prev => ({ ...prev, description: e.target.value }))}
                rows={2}
                className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-800 text-[#171717] dark:text-[#ededed]"
                placeholder="–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏..."
              />
            </div>
          </div>

          <div className="flex gap-2">
            <button
              onClick={addCategory}
              className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
            >
              –î–æ–±–∞–≤–∏—Ç—å
            </button>
            <button
              onClick={() => {
                setIsAddingNew(false);
                setNewCategory({ key: "", name: "", description: "", order: categories.length + 1 });
              }}
              className="px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors"
            >
              –û—Ç–º–µ–Ω–∞
            </button>
          </div>
        </div>
      )}

      {/* –°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π */}
      <div className="bg-white dark:bg-[#0a0a0a] rounded-lg border border-[#171717]/5 dark:border-[#ededed]/10 overflow-hidden">
        {loading ? (
          <div className="p-8 text-center">
            <div className="text-[#171717]/60 dark:text-[#ededed]/60">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
          </div>
        ) : (
          <div className="overflow-x-auto">
            <table className="w-full">
              <thead className="bg-gray-50 dark:bg-gray-800/50">
                <tr>
                  <th className="px-6 py-3 text-left text-sm font-medium text-[#171717] dark:text-[#ededed]">
                    –ü–æ—Ä—è–¥–æ–∫
                  </th>
                  <th className="px-6 py-3 text-left text-sm font-medium text-[#171717] dark:text-[#ededed]">
                    –ö–∞—Ç–µ–≥–æ—Ä–∏—è
                  </th>
                  <th className="px-6 py-3 text-left text-sm font-medium text-[#171717] dark:text-[#ededed]">
                    –ö–ª—é—á
                  </th>
                  <th className="px-6 py-3 text-left text-sm font-medium text-[#171717] dark:text-[#ededed]">
                    –°—Ç–∞—Ç—å–∏
                  </th>
                  <th className="px-6 py-3 text-right text-sm font-medium text-[#171717] dark:text-[#ededed]">
                    –î–µ–π—Å—Ç–≤–∏—è
                  </th>
                </tr>
              </thead>
              <tbody className="divide-y divide-gray-200 dark:divide-gray-700">
                {categories.map((category, index) => (
                  <tr key={category.key} className="hover:bg-gray-50 dark:hover:bg-gray-800/50">
                    <td className="px-6 py-4">
                      <div className="flex items-center gap-1">
                        <span className="text-sm font-medium text-[#171717] dark:text-[#ededed]">
                          {index + 1}
                        </span>
                        <div className="flex flex-col">
                          <button
                            onClick={() => moveCategory(index, "up")}
                            disabled={index === 0}
                            className="w-6 h-3 text-xs text-gray-500 hover:text-gray-700 disabled:opacity-30 disabled:cursor-not-allowed"
                          >
                            ‚ñ≤
                          </button>
                          <button
                            onClick={() => moveCategory(index, "down")}
                            disabled={index === categories.length - 1}
                            className="w-6 h-3 text-xs text-gray-500 hover:text-gray-700 disabled:opacity-30 disabled:cursor-not-allowed"
                          >
                            ‚ñº
                          </button>
                        </div>
                      </div>
                    </td>
                    <td className="px-6 py-4">
                      {editingCategory?.key === category.key ? (
                        <div className="space-y-2">
                          <input
                            type="text"
                            value={editingCategory.name}
                            onChange={(e) => setEditingCategory(prev => 
                              prev ? { ...prev, name: e.target.value } : null
                            )}
                            className="w-full px-2 py-1 text-sm border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-800 text-[#171717] dark:text-[#ededed]"
                          />
                          <textarea
                            value={editingCategory.description}
                            onChange={(e) => setEditingCategory(prev => 
                              prev ? { ...prev, description: e.target.value } : null
                            )}
                            rows={2}
                            className="w-full px-2 py-1 text-sm border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-800 text-[#171717] dark:text-[#ededed]"
                          />
                        </div>
                      ) : (
                        <div>
                          <div className="font-medium text-[#171717] dark:text-[#ededed]">
                            {category.name}
                          </div>
                          {category.description && (
                            <div className="text-sm text-[#171717]/60 dark:text-[#ededed]/60 mt-1">
                              {category.description}
                            </div>
                          )}
                        </div>
                      )}
                    </td>
                    <td className="px-6 py-4">
                      <code className="px-2 py-1 text-sm bg-gray-100 dark:bg-gray-800 text-[#171717] dark:text-[#ededed] rounded">
                        {category.key}
                      </code>
                    </td>
                    <td className="px-6 py-4">
                      <div className="flex items-center gap-2">
                        <span className="text-sm text-[#171717] dark:text-[#ededed]">
                          {category.articlesCount}
                        </span>
                        {category.articlesCount > 0 && (
                          <Link
                            href={`/admin/articles?category=${category.key}`}
                            className="text-xs text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300"
                          >
                            –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å
                          </Link>
                        )}
                      </div>
                    </td>
                    <td className="px-6 py-4">
                      <div className="flex items-center gap-1 justify-end">
                        {editingCategory?.key === category.key ? (
                          <>
                            <button
                              onClick={() => updateCategory(editingCategory)}
                              className="inline-flex items-center justify-center w-8 h-8 rounded-md bg-green-100 text-green-700 hover:bg-green-200 dark:bg-green-900/30 dark:text-green-300 dark:hover:bg-green-900/50 transition-colors"
                              title="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å"
                            >
                              ‚úì
                            </button>
                            <button
                              onClick={() => setEditingCategory(null)}
                              className="inline-flex items-center justify-center w-8 h-8 rounded-md bg-gray-100 text-gray-700 hover:bg-gray-200 dark:bg-gray-900/30 dark:text-gray-300 dark:hover:bg-gray-900/50 transition-colors"
                              title="–û—Ç–º–µ–Ω–∞"
                            >
                              √ó
                            </button>
                          </>
                        ) : (
                          <>
                            <button
                              onClick={() => setEditingCategory(category)}
                              className="inline-flex items-center justify-center w-8 h-8 rounded-md bg-blue-100 text-blue-700 hover:bg-blue-200 dark:bg-blue-900/30 dark:text-blue-300 dark:hover:bg-blue-900/50 transition-colors"
                              title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"
                            >
                              ‚úèÔ∏è
                            </button>
                            <button
                              onClick={() => deleteCategory(category.key)}
                              disabled={category.articlesCount > 0}
                              className="inline-flex items-center justify-center w-8 h-8 rounded-md bg-red-100 text-red-700 hover:bg-red-200 dark:bg-red-900/30 dark:text-red-300 dark:hover:bg-red-900/50 transition-colors disabled:opacity-50 disabled:cursor-not-allowed"
                              title={category.articlesCount > 0 ? "–ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Å–æ —Å—Ç–∞—Ç—å—è–º–∏" : "–£–¥–∞–ª–∏—Ç—å"}
                            >
                              üóëÔ∏è
                            </button>
                          </>
                        )}
                      </div>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        )}
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      <div className="bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-4">
        <h3 className="text-sm font-semibold text-blue-900 dark:text-blue-300 mb-2">
          ‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö
        </h3>
        <div className="text-sm text-blue-800 dark:text-blue-300 space-y-1">
          <p>‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç—Ä–µ–ª–∫–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ—Ä—è–¥–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏</p>
          <p>‚Ä¢ –ö–ª—é—á –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ URL –∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏–∑–º–µ–Ω–µ–Ω –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è</p>
          <p>‚Ä¢ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å —Å—Ç–∞—Ç—å—è–º–∏ –Ω–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å - —Å–Ω–∞—á–∞–ª–∞ –ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç–µ –∏–ª–∏ —É–¥–∞–ª–∏—Ç–µ —Å—Ç–∞—Ç—å–∏</p>
          <p>‚Ä¢ –ü–æ—Ä—è–¥–æ–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–∏, –Ω–æ –ª—É—á—à–µ –Ω–∞–∂–∞—Ç—å "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–æ—Ä—è–¥–æ–∫"</p>
        </div>
      </div>
    </div>
  );
}
