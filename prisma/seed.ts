import { PrismaClient, UserRole, UserStatus, ArticleStatus, HttpMethod, FeedbackType } from "@prisma/client";
import bcrypt from "bcryptjs";

const prisma = new PrismaClient();

async function main() {
  console.log("üå± –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...");

  // –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–∏–ª–∏ –Ω–∞—Ö–æ–¥–∏–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ)
  const adminPassword = await bcrypt.hash("umbra2024", 10);
  const admin = await prisma.user.upsert({
    where: { email: "admin@umbra-platform.dev" },
    update: {},
    create: {
      email: "admin@umbra-platform.dev",
      name: "Umbra Platform Admin",
      password: adminPassword,
      role: UserRole.ADMIN,
      status: UserStatus.APPROVED,
      apiKey: "umbra_admin_key_" + Math.random().toString(36).substring(2, 15),
    },
  });

  console.log("‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –≥–æ—Ç–æ–≤:", admin.email);

  // –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ä–æ–ª—å—é USER
  const userPassword = await bcrypt.hash("user123", 10);
  const user = await prisma.user.upsert({
    where: { email: "user@umbra-platform.dev" },
    update: {},
    create: {
      email: "user@umbra-platform.dev",
      name: "Regular User",
      password: userPassword,
      role: UserRole.USER,
      status: UserStatus.APPROVED,
      apiKey: "umbra_user_key_" + Math.random().toString(36).substring(2, 15),
    },
  });
  console.log("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≥–æ—Ç–æ–≤:", user.email);

  // –°–æ–∑–¥–∞–µ–º –º–µ–¥–∏–∞ –±–∞–π–µ—Ä–∞
  const mediaBuyerPassword = await bcrypt.hash("buyer123", 10);
  const mediaBuyer = await prisma.user.upsert({
    where: { email: "mediabuyer@umbra-platform.dev" },
    update: {},
    create: {
      email: "mediabuyer@umbra-platform.dev",
      name: "Media Buyer",
      password: mediaBuyerPassword,
      role: UserRole.MEDIA_BUYER,
      status: UserStatus.APPROVED,
      apiKey: "umbra_buyer_key_" + Math.random().toString(36).substring(2, 15),
    },
  });
  console.log("‚úÖ –ú–µ–¥–∏–∞ –±–∞–π–µ—Ä –≥–æ—Ç–æ–≤:", mediaBuyer.email);

  // –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  const categories = [
    {
      key: "getting-started",
      name: "–ù–ê–ß–ê–õ–û –†–ê–ë–û–¢–´",
      description: "–û—Å–Ω–æ–≤—ã —Ä–∞–±–æ—Ç—ã —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π –∏ –ø–µ—Ä–≤—ã–µ —à–∞–≥–∏",
      order: 1,
    },
    {
      key: "api",
      name: "API REFERENCE V2",
      description: "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø–æ API –≤–µ—Ä—Å–∏–∏ 2",
      order: 2,
    },
    {
      key: "cms-modules",
      name: "–ú–û–î–£–õ–ò –î–õ–Ø CMS",
      description: "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ CMS —Å–∏—Å—Ç–µ–º–∞–º–∏",
      order: 3,
    },
    {
      key: "forms-buttons",
      name: "–§–û–†–ú–´ –ò –ö–ù–û–ü–ö–ò",
      description: "–°–æ–∑–¥–∞–Ω–∏–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–æ—Ä–º –∏ –∫–Ω–æ–ø–æ–∫",
      order: 4,
    },
  ];

  for (const categoryData of categories) {
    await prisma.category.upsert({
      where: { key: categoryData.key },
      update: categoryData,
      create: categoryData,
    });
  }

  console.log("‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã");

  // –°–æ–∑–¥–∞–µ–º —Å–∞–ø–ø–æ—Ä—Ç
  const supportPassword = await bcrypt.hash("support123", 10);
  const support = await prisma.user.upsert({
    where: { email: "support@umbra-platform.dev" },
    update: {},
    create: {
      email: "support@umbra-platform.dev",
      name: "Support Agent",
      password: supportPassword,
      role: UserRole.SUPPORT,
      status: UserStatus.APPROVED,
      apiKey: "umbra_support_key_" + Math.random().toString(36).substring(2, 15),
    },
  });
  console.log("‚úÖ –°–∞–ø–ø–æ—Ä—Ç –≥–æ—Ç–æ–≤:", support.email);

  // –°–æ–∑–¥–∞–µ–º —Å—Ç–∞—Ç—å–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
  const articles = [
    // –ù–ê–ß–ê–õ–û –†–ê–ë–û–¢–´
    {
      title: "–û–±–∑–æ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏",
      slug: "overview",
      content: `# –û–±–∑–æ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é CryptoCloud API! üöÄ

–¶–µ–ª—å —ç—Ç–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ ‚Äî –ø—Ä–æ–∏–ª–ª—é—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å, –∫–∞–∫ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å –ª—é–±–æ–π –ø—Ä–æ–µ–∫—Ç —Å CryptoCloud –∏ –Ω–∞—á–∞—Ç—å –ø—Ä–∏–Ω–∏–º–∞—Ç—å –ø–ª–∞—Ç–µ–∂–∏ –≤ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–µ.

## –û —Å–µ—Ä–≤–∏—Å–µ

CryptoCloud ‚Äî —ç—Ç–æ –ø–ª–∞—Ç–µ–∂–Ω—ã–π —à–ª—é–∑, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç —É–¥–æ–±–Ω–æ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –ø–ª–∞—Ç–µ–∂–∏ –≤ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞—Ö. –° –ø–æ–º–æ—â—å—é –Ω–∞—à–µ–≥–æ –∫—Ä–∏–ø—Ç–æ —ç–∫–≤–∞–π—Ä–∏–Ω–≥–∞ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –ø—Ä–∏–µ–º –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π –∫ –æ–Ω–ª–∞–π–Ω-—Å–µ—Ä–≤–∏—Å—É, –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω—É, –æ–Ω–ª–∞–π–Ω-—à–∫–æ–ª–µ, Telegram-–±–æ—Ç—É –∏ –¥—Ä—É–≥–∏–º –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º.

## –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ API

- **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç–∞–º–∏:** —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ, —É–ø—Ä–∞–≤–ª—è–π—Ç–µ –∏ –º–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–∞—à–∏—Ö —Å—á–µ—Ç–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏.
- **–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:** –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –ø–ª–∞—Ç–µ–∂–µ–π –∏ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –º–µ–∂–¥—É —Å—á–µ—Ç–∞–º–∏.
- **–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å:** –≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø—Ä–∏ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∏ –ø–æ–ª–Ω–∞—è –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π.
- **Webhook-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:** –ø–æ–ª—É—á–∞–π—Ç–µ –º–≥–Ω–æ–≤–µ–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å—Ç–∞—Ç—É—Å–µ –ø–ª–∞—Ç–µ–∂–µ–π.
- **–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –≤–∞–ª—é—Ç—ã:** –ø–æ–¥–¥–µ—Ä–∂–∫–∞ Bitcoin, Ethereum, USDT –∏ –¥—Ä—É–≥–∏—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç.

## –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã

| –í–∞–ª—é—Ç–∞ | –°–µ—Ç—å | –ö–æ–º–∏—Å—Å–∏—è |
|--------|------|----------|
| Bitcoin | BTC | 0.5% |
| Ethereum | ETH | 0.5% |
| USDT | TRC20, ERC20 | 0.5% |
| Litecoin | LTC | 0.5% |
| USDC | ERC20 | 0.5% |`,
      excerpt: "–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ CryptoCloud API –∏ –µ–≥–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö",
      status: ArticleStatus.PUBLISHED,
      categoryKey: "getting-started",
      tags: JSON.stringify(["api", "–æ–±–∑–æ—Ä", "–Ω–∞—á–∞–ª–æ"]),
      metaTitle: "–û–±–∑–æ—Ä CryptoCloud API - –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è",
      metaDescription: "–£–∑–Ω–∞–π—Ç–µ –æ—Å–Ω–æ–≤—ã —Ä–∞–±–æ—Ç—ã —Å CryptoCloud API –¥–ª—è –ø—Ä–∏–µ–º–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π",
      authorId: admin.id,
      viewCount: 1250,
    },
    {
      title: "–ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç",
      slug: "quick-start",
      content: `# –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç

–ù–∞—á–Ω–∏—Ç–µ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏ –∑–∞ 5 –º–∏–Ω—É—Ç! ‚ö°

## –®–∞–≥ 1: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è

1. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ [cryptocloud.plus](https://cryptocloud.plus)
2. –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ email –∞–¥—Ä–µ—Å
3. –ü—Ä–æ–π–¥–∏—Ç–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é

## –®–∞–≥ 2: –ü–æ–ª—É—á–µ–Ω–∏–µ API –∫–ª—é—á–∞

1. –í–æ–π–¥–∏—Ç–µ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "API"
3. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π API –∫–ª—é—á
4. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∫–ª—é—á –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º –º–µ—Å—Ç–µ

## –®–∞–≥ 3: –ü–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å

\`\`\`bash
curl -X POST https://api.cryptocloud.plus/v2/invoice/create \\
  -H "Authorization: Token YOUR_API_KEY" \\
  -H "Content-Type: application/json" \\
  -d '{
    "amount": 10,
    "currency": "USD",
    "order_id": "test_order_1"
  }'
\`\`\`

## –ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞

\`\`\`json
{
  "status": "success",
  "result": {
    "uuid": "d24a5a94-8604-4d8e-b6e3-2b5e6f7a8b9c",
    "link": "https://pay.cryptocloud.plus/d24a5a94",
    "amount": 10,
    "currency": "USD",
    "status": "created"
  }
}
\`\`\`

üéâ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏.`,
      excerpt: "–ü–æ—à–∞–≥–æ–≤–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –Ω–∞—á–∞–ª—É —Ä–∞–±–æ—Ç—ã —Å CryptoCloud",
      status: ArticleStatus.PUBLISHED,
      categoryKey: "getting-started",
      tags: JSON.stringify(["–±—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç", "—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", "–ø–µ—Ä–≤—ã–µ —à–∞–≥–∏"]),
      metaTitle: "–ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç - CryptoCloud API",
      metaDescription: "–ù–∞—á–Ω–∏—Ç–µ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∫—Ä–∏–ø—Ç–æ–ø–ª–∞—Ç–µ–∂–∏ –∑–∞ 5 –º–∏–Ω—É—Ç —Å CryptoCloud",
      authorId: admin.id,
      viewCount: 890,
    },
    {
      title: "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è",
      slug: "integration",
      content: `# –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –≤–∞—à–∏–º –ø—Ä–æ–µ–∫—Ç–æ–º

–£–∑–Ω–∞–π—Ç–µ, –∫–∞–∫ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å CryptoCloud –≤ –≤–∞—à –ø—Ä–æ–µ–∫—Ç.

## –¢–∏–ø—ã –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏

### 1. REST API
–ü–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π REST API –¥–ª—è –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π.

### 2. Webhook-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–µ–π.

### 3. SDK –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
–ì–æ—Ç–æ–≤—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —è–∑—ã–∫–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è.

## –ì–æ—Ç–æ–≤—ã–µ SDK

| –Ø–∑—ã–∫ | –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π | –£—Å—Ç–∞–Ω–æ–≤–∫–∞ |
|------|-------------|-----------|
| PHP | github.com/cryptocloud/php-sdk | \`composer install cryptocloud/sdk\` |
| Node.js | github.com/cryptocloud/node-sdk | \`npm install cryptocloud-sdk\` |
| Python | github.com/cryptocloud/python-sdk | \`pip install cryptocloud\` |
| Laravel | github.com/cryptocloud/laravel | \`composer install cryptocloud/laravel\` |

## –ü—Ä–∏–º–µ—Ä –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ (PHP)

\`\`\`php
<?php
require_once 'vendor/autoload.php';

use CryptoCloud\\SDK\\Client;

$client = new Client('YOUR_API_KEY');

// –°–æ–∑–¥–∞–Ω–∏–µ —Å—á–µ—Ç–∞
$invoice = $client->createInvoice([
    'amount' => 100,
    'currency' => 'USD',
    'order_id' => 'order_12345'
]);

echo "–°—Å—ã–ª–∫–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã: " . $invoice['link'];
?>
\`\`\`

## Webhook –æ–±—Ä–∞–±–æ—Ç–∫–∞

\`\`\`php
<?php
// webhook.php
$payload = file_get_contents('php://input');
$data = json_decode($payload, true);

if ($data['status'] === 'paid') {
    // –ü–ª–∞—Ç–µ–∂ –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ
    $orderId = $data['order_id'];
    // –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –≤ –≤–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ
}
?>
\`\`\``,
      excerpt: "–ü–æ–¥—Ä–æ–±–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ CryptoCloud –≤ –≤–∞—à –ø—Ä–æ–µ–∫—Ç",
      status: ArticleStatus.PUBLISHED,
      categoryKey: "getting-started",
      tags: JSON.stringify(["–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è", "sdk", "webhook"]),
      metaTitle: "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è CryptoCloud - –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è",
      metaDescription: "–£–∑–Ω–∞–π—Ç–µ, –∫–∞–∫ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å CryptoCloud –≤ –≤–∞—à –ø—Ä–æ–µ–∫—Ç",
      authorId: admin.id,
      viewCount: 654,
    },
    {
      title: "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ",
      slug: "testing",
      content: `# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏

–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤–∞—à—É –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω.

## –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º

CryptoCloud –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º:

- –í—Å–µ API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–∞–∫ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
- –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ç–µ—Å—Ç–æ–≤—ã–µ –∞–¥—Ä–µ—Å–∞ –∫–æ—à–µ–ª—å–∫–æ–≤
- –†–µ–∞–ª—å–Ω—ã–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –Ω–µ —Å–ø–∏—Å—ã–≤–∞—é—Ç—Å—è
- –ú–æ–∂–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –ø–ª–∞—Ç–µ–∂–µ–π

## –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ API –∫–ª—é—á–∞

1. –í –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç–µ—Å—å –≤ "–¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º"
2. –°–æ–∑–¥–∞–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–π API –∫–ª—é—á
3. –ö–ª—é—á –±—É–¥–µ—Ç –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å \`test_\`

## –¢–µ—Å—Ç–æ–≤—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏

### –£—Å–ø–µ—à–Ω—ã–π –ø–ª–∞—Ç–µ–∂
\`\`\`bash
curl -X POST https://api.cryptocloud.plus/v2/invoice/create \\
  -H "Authorization: Token test_YOUR_API_KEY" \\
  -H "Content-Type: application/json" \\
  -d '{
    "amount": 10,
    "currency": "USD",
    "test_scenario": "success"
  }'
\`\`\`

### –û—Ç–∫–ª–æ–Ω–µ–Ω–Ω—ã–π –ø–ª–∞—Ç–µ–∂
\`\`\`bash
curl -X POST https://api.cryptocloud.plus/v2/invoice/create \\
  -H "Authorization: Token test_YOUR_API_KEY" \\
  -H "Content-Type: application/json" \\
  -d '{
    "amount": 10,
    "currency": "USD",
    "test_scenario": "failed"
  }'
\`\`\`

## Checklist —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

- [ ] –°–æ–∑–¥–∞–Ω–∏–µ —Å—á–µ—Ç–∞
- [ ] –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—á–µ—Ç–µ
- [ ] Webhook —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
- [ ] –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π
- [ ] –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π
- [ ] Timeout —Å—Ü–µ–Ω–∞—Ä–∏–∏`,
      excerpt: "–ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å CryptoCloud",
      status: ArticleStatus.PUBLISHED,
      categoryKey: "getting-started",
      tags: JSON.stringify(["—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ", "test mode", "debugging"]),
      metaTitle: "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ CryptoCloud –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏",
      metaDescription: "–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å CryptoCloud –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º",
      authorId: admin.id,
      viewCount: 423,
    },

    // API REFERENCE V2
    {
      title: "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤",
      slug: "auth",
      content: `# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤

–í—Å–µ –∑–∞–ø—Ä–æ—Å—ã –∫ API CryptoCloud –¥–æ–ª–∂–Ω—ã —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫ Authorization —Å –≤–∞—à–∏–º API –∫–ª—é—á–æ–º.

## –ü–æ–ª—É—á–µ–Ω–∏–µ API –∫–ª—é—á–∞

API –∫–ª—é—á –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ CryptoCloud –≤ —Ä–∞–∑–¥–µ–ª–µ "API".

## –§–æ—Ä–º–∞—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞

\`\`\`
Authorization: Token YOUR_API_KEY
\`\`\`

## –¢–∏–ø—ã –∫–ª—é—á–µ–π

### –ü—Ä–æ–¥–∞–∫—à–µ–Ω –∫–ª—é—á–∏
- –ù–∞—á–∏–Ω–∞—é—Ç—Å—è —Å \`cc_live_\`
- –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è —Ä–µ–∞–ª—å–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π
- –¢—Ä–µ–±—É—é—Ç –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞

### –¢–µ—Å—Ç–æ–≤—ã–µ –∫–ª—é—á–∏
- –ù–∞—á–∏–Ω–∞—é—Ç—Å—è —Å \`cc_test_\`
- –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
- –î–æ—Å—Ç—É–ø–Ω—ã —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏

## –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å

‚ö†Ô∏è **–í–∞–∂–Ω–æ**: –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ API –∫–ª—é—á–∏ –Ω–∞ –∫–ª–∏–µ–Ω—Ç—Å–∫—É—é —Å—Ç–æ—Ä–æ–Ω—É!

- –•—Ä–∞–Ω–∏—Ç–µ –∫–ª—é—á–∏ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ HTTPS –¥–ª—è –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
- –†–µ–≥—É–ª—è—Ä–Ω–æ –æ–±–Ω–æ–≤–ª—è–π—Ç–µ –∫–ª—é—á–∏
- –ú–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ API

## –ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞

\`\`\`bash
curl -H "Authorization: Token cc_live_abc123..." \\
     -H "Content-Type: application/json" \\
     https://api.cryptocloud.plus/v2/balance
\`\`\`

## –ö–æ–¥—ã –æ—à–∏–±–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏

| –ö–æ–¥ | –û–ø–∏—Å–∞–Ω–∏–µ |
|-----|----------|
| 401 | –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫ Authorization |
| 403 | –ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á |
| 429 | –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ |`,
      excerpt: "–ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å—ã –∫ CryptoCloud API",
      status: ArticleStatus.PUBLISHED,
      categoryKey: "api",
      tags: JSON.stringify(["–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è", "api-–∫–ª—é—á–∏", "–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å"]),
      metaTitle: "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è API –∑–∞–ø—Ä–æ—Å–æ–≤ - CryptoCloud",
      metaDescription: "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ CryptoCloud API",
      authorId: admin.id,
      viewCount: 1100,
    },
    {
      title: "–°–æ–∑–¥–∞–Ω–∏–µ —Å—á–µ—Ç–∞",
      slug: "invoice-create",
      content: `# –°–æ–∑–¥–∞–Ω–∏–µ —Å—á–µ—Ç–∞

–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å—á–µ—Ç–∞ –¥–ª—è –ø—Ä–∏–µ–º–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π.

## HTTP –∑–∞–ø—Ä–æ—Å

\`\`\`http
POST https://api.cryptocloud.plus/v2/invoice/create
\`\`\`

## –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞

| –ü–∞—Ä–∞–º–µ—Ç—Ä | –¢–∏–ø | –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π | –û–ø–∏—Å–∞–Ω–∏–µ |
|----------|-----|--------------|----------|
| amount | number | –î–∞ | –°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ |
| currency | string | –î–∞ | –í–∞–ª—é—Ç–∞ —Å—á–µ—Ç–∞ (USD, EUR, RUB) |
| order_id | string | –ù–µ—Ç | –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–∫–∞–∑–∞ –≤ –≤–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ |
| email | string | –ù–µ—Ç | Email –ø–ª–∞—Ç–µ–ª—å—â–∏–∫–∞ |
| description | string | –ù–µ—Ç | –û–ø–∏—Å–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ |
| success_url | string | –ù–µ—Ç | URL –¥–ª—è –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã |
| fail_url | string | –ù–µ—Ç | URL –¥–ª—è –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å–ª–µ –Ω–µ—É–¥–∞—á–Ω–æ–π –æ–ø–ª–∞—Ç—ã |
| webhook_url | string | –ù–µ—Ç | URL –¥–ª—è webhook —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π |

## –ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞

\`\`\`bash
curl -X POST https://api.cryptocloud.plus/v2/invoice/create \\
  -H "Authorization: Token YOUR_API_KEY" \\
  -H "Content-Type: application/json" \\
  -d '{
    "amount": 100,
    "currency": "USD",
    "order_id": "order_12345",
    "email": "user@example.com",
    "description": "–ü–æ–∫—É–ø–∫–∞ Premium –ø–æ–¥–ø–∏—Å–∫–∏",
    "success_url": "https://mysite.com/success",
    "fail_url": "https://mysite.com/fail"
  }'
\`\`\`

## –ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞

\`\`\`json
{
  "status": "success",
  "result": {
    "uuid": "d24a5a94-8604-4d8e-b6e3-2b5e6f7a8b9c",
    "link": "https://pay.cryptocloud.plus/d24a5a94",
    "amount": 100,
    "currency": "USD",
    "order_id": "order_12345",
    "status": "created",
    "created_at": "2024-01-15T10:30:00Z",
    "expires_at": "2024-01-15T11:30:00Z"
  }
}
\`\`\`

## –°—Ç–∞—Ç—É—Å—ã —Å—á–µ—Ç–∞

| –°—Ç–∞—Ç—É—Å | –û–ø–∏—Å–∞–Ω–∏–µ |
|--------|----------|
| created | –°—á–µ—Ç —Å–æ–∑–¥–∞–Ω, –æ–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã |
| pending | –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è, –æ–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–π |
| paid | –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω |
| failed | –ü–ª–∞—Ç–µ–∂ –æ—Ç–∫–ª–æ–Ω–µ–Ω –∏–ª–∏ –≤—Ä–µ–º—è –∏—Å—Ç–µ–∫–ª–æ |
| cancelled | –°—á–µ—Ç –æ—Ç–º–µ–Ω–µ–Ω |`,
      excerpt: "–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å —Å—á–µ—Ç –¥–ª—è –ø—Ä–∏–µ–º–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π",
      status: ArticleStatus.PUBLISHED,
      categoryKey: "api",
      tags: JSON.stringify(["—Å—á–µ—Ç–∞", "api", "–ø–ª–∞—Ç–µ–∂–∏"]),
      metaTitle: "–°–æ–∑–¥–∞–Ω–∏–µ —Å—á–µ—Ç–∞ - CryptoCloud API",
      metaDescription: "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é —Å—á–µ—Ç–∞ —á–µ—Ä–µ–∑ CryptoCloud API",
      authorId: admin.id,
      viewCount: 987,
    },
    {
      title: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—á–µ—Ç–µ",
      slug: "invoice-info",
      content: `# –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—á–µ—Ç–µ

–ü–æ–ª—É—á–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–∑–¥–∞–Ω–Ω–æ–º —Å—á–µ—Ç–µ.

## HTTP –∑–∞–ø—Ä–æ—Å

\`\`\`http
GET https://api.cryptocloud.plus/v2/invoice/info
\`\`\`

## –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞

| –ü–∞—Ä–∞–º–µ—Ç—Ä | –¢–∏–ø | –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π | –û–ø–∏—Å–∞–Ω–∏–µ |
|----------|-----|--------------|----------|
| uuid | string | –î–∞ | UUID —Å—á–µ—Ç–∞ |

## –ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞

\`\`\`bash
curl -X GET "https://api.cryptocloud.plus/v2/invoice/info?uuid=d24a5a94-8604-4d8e-b6e3-2b5e6f7a8b9c" \\
  -H "Authorization: Token YOUR_API_KEY"
\`\`\`

## –ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞

\`\`\`json
{
  "status": "success",
  "result": {
    "uuid": "d24a5a94-8604-4d8e-b6e3-2b5e6f7a8b9c",
    "amount": 100,
    "currency": "USD",
    "order_id": "order_12345",
    "email": "user@example.com",
    "description": "–ü–æ–∫—É–ø–∫–∞ Premium –ø–æ–¥–ø–∏—Å–∫–∏",
    "status": "paid",
    "created_at": "2024-01-15T10:30:00Z",
    "paid_at": "2024-01-15T10:45:00Z",
    "crypto_amount": "0.00234567",
    "crypto_currency": "BTC",
    "network": "Bitcoin",
    "address": "bc1qxy2kgdygjrsqtzq2n0yrf2493p83kkfjhx0wlh",
    "txid": "8a5b2c3d4e5f6a7b8c9d0e1f2a3b4c5d6e7f8a9b0c1d2e3f4a5b6c7d8e9f0a1b2",
    "confirmations": 6
  }
}
\`\`\`

## –ü–æ–ª—è –æ—Ç–≤–µ—Ç–∞

| –ü–æ–ª–µ | –û–ø–∏—Å–∞–Ω–∏–µ |
|------|----------|
| uuid | –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å—á–µ—Ç–∞ |
| amount | –°—É–º–º–∞ –≤ —Ñ–∏–∞—Ç–Ω–æ–π –≤–∞–ª—é—Ç–µ |
| currency | –§–∏–∞—Ç–Ω–∞—è –≤–∞–ª—é—Ç–∞ |
| crypto_amount | –°—É–º–º–∞ –≤ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–µ |
| crypto_currency | –¢–∏–ø –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã |
| network | –ë–ª–æ–∫—á–µ–π–Ω —Å–µ—Ç—å |
| address | –ê–¥—Ä–µ—Å –¥–ª—è –æ–ø–ª–∞—Ç—ã |
| txid | –•–µ—à —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ (–µ—Å–ª–∏ –æ–ø–ª–∞—á–µ–Ω) |
| confirmations | –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–π |`,
      excerpt: "–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–∑–¥–∞–Ω–Ω–æ–º —Å—á–µ—Ç–µ",
      status: ArticleStatus.PUBLISHED,
      categoryKey: "api",
      tags: JSON.stringify(["—Å—á–µ—Ç–∞", "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "—Å—Ç–∞—Ç—É—Å"]),
      metaTitle: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—á–µ—Ç–µ - CryptoCloud API",
      metaDescription: "–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—á–µ—Ç–µ —á–µ—Ä–µ–∑ API",
      authorId: admin.id,
      viewCount: 756,
    },

    // –ú–û–î–£–õ–ò –î–õ–Ø CMS
    {
      title: "WordPress –ø–ª–∞–≥–∏–Ω",
      slug: "wordpress-plugin",
      content: `# WordPress –ø–ª–∞–≥–∏–Ω CryptoCloud

–ì–æ—Ç–æ–≤—ã–π –ø–ª–∞–≥–∏–Ω –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ CryptoCloud —Å WordPress –∏ WooCommerce.

## –£—Å—Ç–∞–Ω–æ–≤–∫–∞

### –°–ø–æ—Å–æ–± 1: –ß–µ—Ä–µ–∑ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
1. –í –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ WordPress –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ "–ü–ª–∞–≥–∏–Ω—ã" ‚Üí "–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π"
2. –ù–∞–π–¥–∏—Ç–µ "CryptoCloud Payment Gateway"
3. –ù–∞–∂–º–∏—Ç–µ "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å" –∏ "–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å"

### –°–ø–æ—Å–æ–± 2: –†—É—á–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞
1. –°–∫–∞—á–∞–π—Ç–µ –ø–ª–∞–≥–∏–Ω —Å [github.com/cryptocloud/wordpress](https://github.com/cryptocloud/wordpress)
2. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –ø–∞–ø–∫—É –≤ \`/wp-content/plugins/\`
3. –ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –ø–ª–∞–≥–∏–Ω –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏

## –ù–∞—Å—Ç—Ä–æ–π–∫–∞

1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ "WooCommerce" ‚Üí "–ù–∞—Å—Ç—Ä–æ–π–∫–∏" ‚Üí "–ü–ª–∞—Ç–µ–∂–∏"
2. –ù–∞–π–¥–∏—Ç–µ "CryptoCloud" –∏ –Ω–∞–∂–º–∏—Ç–µ "–ù–∞—Å—Ç—Ä–æ–∏—Ç—å"
3. –í–≤–µ–¥–∏—Ç–µ –≤–∞—à API –∫–ª—é—á
4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã

## –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏

| –ü–∞—Ä–∞–º–µ—Ç—Ä | –û–ø–∏—Å–∞–Ω–∏–µ |
|----------|----------|
| API –∫–ª—é—á | –í–∞—à API –∫–ª—é—á –∏–∑ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ |
| –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º | –í–∫–ª—é—á–∏—Ç—å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è |
| –ó–∞–≥–æ–ª–æ–≤–æ–∫ | –ù–∞–∑–≤–∞–Ω–∏–µ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã |
| –û–ø–∏—Å–∞–Ω–∏–µ | –û–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π |
| –£—Å–ø–µ—à–Ω–∞—è –æ–ø–ª–∞—Ç–∞ | URL –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã |

## Shortcode –¥–ª—è —Ñ–æ—Ä–º

–ü–ª–∞–≥–∏–Ω –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç shortcode –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–æ—Ä–º –æ–ø–ª–∞—Ç—ã:

\`\`\`
[cryptocloud_payment amount="100" currency="USD" description="Donation"]
\`\`\`

### –ü–∞—Ä–∞–º–µ—Ç—Ä—ã shortcode

- \`amount\` - —Å—É–º–º–∞ –ø–ª–∞—Ç–µ–∂–∞
- \`currency\` - –≤–∞–ª—é—Ç–∞ (USD, EUR, RUB)
- \`description\` - –æ–ø–∏—Å–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞
- \`button_text\` - —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é "–û–ø–ª–∞—Ç–∏—Ç—å")

## –•—É–∫–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤

\`\`\`php
// –ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–µ—Ä–µ–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º —Å—á–µ—Ç–∞
add_filter('cryptocloud_invoice_params', function($params) {
    $params['custom_field'] = 'custom_value';
    return $params;
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
add_action('cryptocloud_payment_completed', function($order_id, $invoice_data) {
    // –í–∞—à –∫–æ–¥
});
\`\`\`

## –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è

- WordPress 5.0+
- WooCommerce 3.0+
- PHP 7.4+
- SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç`,
      excerpt: "–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π WordPress –ø–ª–∞–≥–∏–Ω –¥–ª—è –ø—Ä–∏–µ–º–∞ –∫—Ä–∏–ø—Ç–æ–ø–ª–∞—Ç–µ–∂–µ–π",
      status: ArticleStatus.PUBLISHED,
      categoryKey: "cms-modules",
      tags: JSON.stringify(["wordpress", "woocommerce", "–ø–ª–∞–≥–∏–Ω"]),
      metaTitle: "WordPress –ø–ª–∞–≥–∏–Ω CryptoCloud",
      metaDescription: "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è CryptoCloud —Å WordPress –∏ WooCommerce",
      authorId: admin.id,
      viewCount: 2341,
    },
    {
      title: "–ú–æ–¥—É–ª—å –¥–ª—è OpenCart",
      slug: "opencart-module",
      content: `# –ú–æ–¥—É–ª—å CryptoCloud –¥–ª—è OpenCart

–ì–æ—Ç–æ–≤—ã–π –º–æ–¥—É–ª—å –æ–ø–ª–∞—Ç—ã –¥–ª—è –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–æ–≤ –Ω–∞ OpenCart.

## –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å

- OpenCart 3.x
- OpenCart 4.x
- PHP 7.4+

## –£—Å—Ç–∞–Ω–æ–≤–∫–∞

1. –°–∫–∞—á–∞–π—Ç–µ –º–æ–¥—É–ª—å —Å [github.com/cryptocloud/opencart](https://github.com/cryptocloud/opencart)
2. –í –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ "–†–∞—Å—à–∏—Ä–µ–Ω–∏—è" ‚Üí "–£—Å—Ç–∞–Ω–æ–≤—â–∏–∫"
3. –ó–∞–≥—Ä—É–∑–∏—Ç–µ ZIP —Ñ–∞–π–ª –º–æ–¥—É–ª—è
4. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ "–†–∞—Å—à–∏—Ä–µ–Ω–∏—è" ‚Üí "–û–ø–ª–∞—Ç–∞"
5. –ù–∞–π–¥–∏—Ç–µ CryptoCloud –∏ –Ω–∞–∂–º–∏—Ç–µ "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å"

## –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–¥—É–ª—è

1. –ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ "–ò–∑–º–µ–Ω–∏—Ç—å"
2. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:

### –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏

| –ü–æ–ª–µ | –û–ø–∏—Å–∞–Ω–∏–µ |
|------|----------|
| –°—Ç–∞—Ç—É—Å | –í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –º–æ–¥—É–ª—å |
| API –∫–ª—é—á | –í–∞—à API –∫–ª—é—á |
| –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º | –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ |
| –ü–æ—Ä—è–¥–æ–∫ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ | –ü–æ–∑–∏—Ü–∏—è —Å—Ä–µ–¥–∏ —Å–ø–æ—Å–æ–±–æ–≤ –æ–ø–ª–∞—Ç—ã |

### –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è

| –ü–æ–ª–µ | –û–ø–∏—Å–∞–Ω–∏–µ |
|------|----------|
| –ù–∞–∑–≤–∞–Ω–∏–µ | –ù–∞–∑–≤–∞–Ω–∏–µ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã |
| –û–ø–∏—Å–∞–Ω–∏–µ | –¢–µ–∫—Å—Ç –¥–ª—è –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π |
| –õ–æ–≥–æ—Ç–∏–ø | –ó–∞–≥—Ä—É–∑–∏—Ç–µ –ª–æ–≥–æ—Ç–∏–ø CryptoCloud |

### –°—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–æ–≤

| –°—Ç–∞—Ç—É—Å | –ö–æ–≥–¥–∞ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è |
|--------|------------------|
| –û–∂–∏–¥–∞–Ω–∏–µ –æ–ø–ª–∞—Ç—ã | –°—á–µ—Ç —Å–æ–∑–¥–∞–Ω |
| –û–±—Ä–∞–±–æ—Ç–∫–∞ | –ü–ª–∞—Ç–µ–∂ –ø–æ–ª—É—á–µ–Ω |
| –í—ã–ø–æ–ª–Ω–µ–Ω | –ü–ª–∞—Ç–µ–∂ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω |
| –û—Ç–º–µ–Ω–µ–Ω | –ü–ª–∞—Ç–µ–∂ –æ—Ç–∫–ª–æ–Ω–µ–Ω |

## Webhook –Ω–∞—Å—Ç—Ä–æ–π–∫–∞

1. –í –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –º–æ–¥—É–ª—è –Ω–∞–π–¥–∏—Ç–µ "Webhook URL"
2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ URL
3. –í –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ CryptoCloud –¥–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ—Ç URL –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook

–ü—Ä–∏–º–µ—Ä webhook URL:
\`\`\`
https://yourstore.com/index.php?route=extension/payment/cryptocloud/webhook
\`\`\`

## –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –≤–∞–ª—é—Ç—ã

–ú–æ–¥—É–ª—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –≤–∞–ª—é—Ç—É –º–∞–≥–∞–∑–∏–Ω–∞ –≤ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ CryptoCloud –≤–∞–ª—é—Ç—ã:
- USD
- EUR  
- RUB

## –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ

–í–∫–ª—é—á–∏—Ç–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏:
1. –í –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –º–æ–¥—É–ª—è –≤–∫–ª—é—á–∏—Ç–µ "–õ–æ–≥"
2. –õ–æ–≥–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ \`system/storage/logs/cryptocloud.log\`

## –ú—É–ª—å—Ç–∏—è–∑—ã—á–Ω–æ—Å—Ç—å

–ú–æ–¥—É–ª—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —è–∑—ã–∫–∏ OpenCart:
- –†—É—Å—Å–∫–∏–π
- –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
- –î–æ–±–∞–≤—å—Ç–µ —Å–≤–æ–π —è–∑—ã–∫ –≤ –ø–∞–ø–∫–µ \`catalog/language/\``,
      excerpt: "–ú–æ–¥—É–ª—å –æ–ø–ª–∞—Ç—ã CryptoCloud –¥–ª—è OpenCart –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–æ–≤",
      status: ArticleStatus.PUBLISHED,
      categoryKey: "cms-modules",
      tags: JSON.stringify(["opencart", "–º–æ–¥—É–ª—å", "–∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω"]),
      metaTitle: "OpenCart –º–æ–¥—É–ª—å CryptoCloud",
      metaDescription: "–ü—Ä–∏–µ–º –∫—Ä–∏–ø—Ç–æ–ø–ª–∞—Ç–µ–∂–µ–π –≤ OpenCart —Å CryptoCloud",
      authorId: admin.id,
      viewCount: 876,
    },

    // –§–û–†–ú–´ –ò –ö–ù–û–ü–ö–ò
    {
      title: "–ö–Ω–æ–ø–∫–∞ –æ–ø–ª–∞—Ç—ã",
      slug: "payment-button",
      content: `# –ö–Ω–æ–ø–∫–∞ –æ–ø–ª–∞—Ç—ã CryptoCloud

–ì–æ—Ç–æ–≤–∞—è JavaScript –∫–Ω–æ–ø–∫–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –Ω–∞ –ª—é–±–æ–π —Å–∞–π—Ç.

## –ë—ã—Å—Ç—Ä–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è

–î–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –Ω–∞ –≤–∞—à—É —Å—Ç—Ä–∞–Ω–∏—Ü—É:

\`\`\`html
<script src="https://cdn.cryptocloud.plus/button.js"></script>
<div id="cryptocloud-button"></div>
<script>
CryptoCloudButton.create({
  container: '#cryptocloud-button',
  amount: 100,
  currency: 'USD',
  description: '–ü–æ–∫—É–ø–∫–∞ —Ç–æ–≤–∞—Ä–∞',
  apiKey: 'YOUR_API_KEY'
});
</script>
\`\`\`

## –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–Ω–æ–ø–∫–∏

| –ü–∞—Ä–∞–º–µ—Ç—Ä | –¢–∏–ø | –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π | –û–ø–∏—Å–∞–Ω–∏–µ |
|----------|-----|--------------|----------|
| container | string | –î–∞ | CSS —Å–µ–ª–µ–∫—Ç–æ—Ä –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ |
| amount | number | –î–∞ | –°—É–º–º–∞ –ø–ª–∞—Ç–µ–∂–∞ |
| currency | string | –î–∞ | –í–∞–ª—é—Ç–∞ (USD, EUR, RUB) |
| apiKey | string | –î–∞ | –í–∞—à API –∫–ª—é—á |
| description | string | –ù–µ—Ç | –û–ø–∏—Å–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ |
| orderId | string | –ù–µ—Ç | ID –∑–∞–∫–∞–∑–∞ –≤ –≤–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ |
| theme | string | –ù–µ—Ç | –¢–µ–º–∞: 'light', 'dark' |
| size | string | –ù–µ—Ç | –†–∞–∑–º–µ—Ä: 'small', 'medium', 'large' |
| language | string | –ù–µ—Ç | –Ø–∑—ã–∫: 'ru', 'en' |

## –ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è

### –¢–µ–º—ã –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è

\`\`\`javascript
// –°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
CryptoCloudButton.create({
  theme: 'light'
});

// –¢–µ–º–Ω–∞—è —Ç–µ–º–∞
CryptoCloudButton.create({
  theme: 'dark'
});
\`\`\`

### –†–∞–∑–º–µ—Ä—ã –∫–Ω–æ–ø–∫–∏

\`\`\`javascript
// –ú–∞–ª–µ–Ω—å–∫–∞—è
CryptoCloudButton.create({
  size: 'small'
});

// –°—Ä–µ–¥–Ω—è—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
CryptoCloudButton.create({
  size: 'medium'
});

// –ë–æ–ª—å—à–∞—è
CryptoCloudButton.create({
  size: 'large'
});
\`\`\`

## –°–æ–±—ã—Ç–∏—è

–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:

\`\`\`javascript
const button = CryptoCloudButton.create({
  // –ø–∞—Ä–∞–º–µ—Ç—Ä—ã...
  onSuccess: function(invoice) {
    console.log('–ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω:', invoice);
    // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤—å—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –ø–æ–∫–∞–∂–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
  },
  onError: function(error) {
    console.error('–û—à–∏–±–∫–∞ –ø–ª–∞—Ç–µ–∂–∞:', error);
    // –ü–æ–∫–∞–∂–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
  },
  onCancel: function() {
    console.log('–ü–ª–∞—Ç–µ–∂ –æ—Ç–º–µ–Ω–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º');
  }
});
\`\`\`

## CSS —Å—Ç–∏–ª–∏–∑–∞—Ü–∏—è

–í—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å—Ç–∏–ª–∏ –∫–Ω–æ–ø–∫–∏:

\`\`\`css
.cryptocloud-button {
  background: linear-gradient(45deg, #6366f1, #8b5cf6);
  border: none;
  border-radius: 8px;
  color: white;
  font-weight: 600;
  transition: all 0.2s;
}

.cryptocloud-button:hover {
  transform: translateY(-2px);
  box-shadow: 0 10px 20px rgba(0,0,0,0.1);
}
\`\`\`

## –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å

‚ö†Ô∏è **–í–∞–∂–Ω–æ**: –î–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è:
- –í–∞–ª–∏–¥–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å webhook –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π
- –ù–µ –ø–æ–ª–∞–≥–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–µ —Å–æ–±—ã—Ç–∏—è`,
      excerpt: "JavaScript –∫–Ω–æ–ø–∫–∞ –æ–ø–ª–∞—Ç—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏",
      status: ArticleStatus.PUBLISHED,
      categoryKey: "forms-buttons",
      tags: JSON.stringify(["javascript", "–∫–Ω–æ–ø–∫–∞", "–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è"]),
      metaTitle: "–ö–Ω–æ–ø–∫–∞ –æ–ø–ª–∞—Ç—ã CryptoCloud",
      metaDescription: "–ë—ã—Å—Ç—Ä–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏ –æ–ø–ª–∞—Ç—ã CryptoCloud",
      authorId: admin.id,
      viewCount: 1432,
    },
    {
      title: "HTML —Ñ–æ—Ä–º—ã",
      slug: "html-forms",
      content: `# HTML —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã

–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∫–∞—Å—Ç–æ–º–Ω—ã–µ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã —Å –ø–æ–ª–Ω—ã–º –∫–æ–Ω—Ç—Ä–æ–ª–µ–º –Ω–∞–¥ –¥–∏–∑–∞–π–Ω–æ–º.

## –ü—Ä–æ—Å—Ç–∞—è —Ñ–æ—Ä–º–∞

\`\`\`html
<form id="payment-form">
  <div class="form-group">
    <label>–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ</label>
    <input type="number" id="amount" min="1" required>
  </div>
  
  <div class="form-group">
    <label>–í–∞–ª—é—Ç–∞</label>
    <select id="currency" required>
      <option value="USD">USD</option>
      <option value="EUR">EUR</option>
      <option value="RUB">RUB</option>
    </select>
  </div>
  
  <div class="form-group">
    <label>Email (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)</label>
    <input type="email" id="email">
  </div>
  
  <div class="form-group">
    <label>–û–ø–∏—Å–∞–Ω–∏–µ</label>
    <textarea id="description" placeholder="–ó–∞ —á—Ç–æ –ø–ª–∞—Ç–∏–º?"></textarea>
  </div>
  
  <button type="submit">–û–ø–ª–∞—Ç–∏—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ–π</button>
</form>

<script>
document.getElementById('payment-form').addEventListener('submit', async function(e) {
  e.preventDefault();
  
  const formData = {
    amount: document.getElementById('amount').value,
    currency: document.getElementById('currency').value,
    email: document.getElementById('email').value,
    description: document.getElementById('description').value,
    order_id: 'order_' + Date.now()
  };
  
  try {
    const response = await fetch('https://api.cryptocloud.plus/v2/invoice/create', {
      method: 'POST',
      headers: {
        'Authorization': 'Token YOUR_API_KEY',
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(formData)
    });
    
    const result = await response.json();
    
    if (result.status === 'success') {
      // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–ø–ª–∞—Ç—ã
      window.location.href = result.result.link;
    } else {
      alert('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—á–µ—Ç–∞: ' + result.message);
    }
  } catch (error) {
    alert('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: ' + error.message);
  }
});
</script>
\`\`\`

## –§–æ—Ä–º–∞ —Å –≤—ã–±–æ—Ä–æ–º –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã

\`\`\`html
<form id="crypto-form">
  <div class="form-row">
    <div class="form-group">
      <label>–°—É–º–º–∞</label>
      <input type="number" id="amount" step="0.01" required>
    </div>
    <div class="form-group">
      <label>–í–∞–ª—é—Ç–∞</label>
      <select id="currency" required>
        <option value="USD">USD ($)</option>
        <option value="EUR">EUR (‚Ç¨)</option>
        <option value="RUB">RUB (‚ÇΩ)</option>
      </select>
    </div>
  </div>
  
  <div class="form-group">
    <label>–ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º–∞—è –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞</label>
    <div class="crypto-options">
      <label class="crypto-option">
        <input type="radio" name="crypto" value="BTC">
        <img src="/images/btc.png" alt="Bitcoin">
        Bitcoin (BTC)
      </label>
      <label class="crypto-option">
        <input type="radio" name="crypto" value="ETH">
        <img src="/images/eth.png" alt="Ethereum">
        Ethereum (ETH)
      </label>
      <label class="crypto-option">
        <input type="radio" name="crypto" value="USDT">
        <img src="/images/usdt.png" alt="USDT">
        USDT
      </label>
    </div>
  </div>
  
  <button type="submit" class="pay-button">
    –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ
  </button>
</form>
\`\`\`

## CSS —Å—Ç–∏–ª–∏

\`\`\`css
.form-group {
  margin-bottom: 20px;
}

.form-group label {
  display: block;
  margin-bottom: 5px;
  font-weight: 600;
  color: #374151;
}

.form-group input,
.form-group select,
.form-group textarea {
  width: 100%;
  padding: 12px;
  border: 1px solid #d1d5db;
  border-radius: 8px;
  font-size: 16px;
}

.form-row {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 20px;
}

.crypto-options {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
  gap: 10px;
}

.crypto-option {
  display: flex;
  align-items: center;
  padding: 12px;
  border: 2px solid #e5e7eb;
  border-radius: 8px;
  cursor: pointer;
  transition: all 0.2s;
}

.crypto-option:hover {
  border-color: #6366f1;
}

.crypto-option input[type="radio"] {
  margin-right: 8px;
}

.crypto-option img {
  width: 24px;
  height: 24px;
  margin-right: 8px;
}

.pay-button {
  width: 100%;
  padding: 16px;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  color: white;
  border: none;
  border-radius: 8px;
  font-size: 18px;
  font-weight: 600;
  cursor: pointer;
  transition: transform 0.2s;
}

.pay-button:hover {
  transform: translateY(-2px);
}
\`\`\`

## –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã

\`\`\`javascript
function validateForm(formData) {
  const errors = [];
  
  if (!formData.amount || formData.amount <= 0) {
    errors.push('–°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 0');
  }
  
  if (!formData.currency) {
    errors.push('–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É');
  }
  
  if (formData.email && !isValidEmail(formData.email)) {
    errors.push('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –∞–¥—Ä–µ—Å');
  }
  
  return errors;
}

function isValidEmail(email) {
  return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);
}
\`\`\``,
      excerpt: "–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω—ã—Ö HTML —Ñ–æ—Ä–º –¥–ª—è –ø—Ä–∏–µ–º–∞ –∫—Ä–∏–ø—Ç–æ–ø–ª–∞—Ç–µ–∂–µ–π",
      status: ArticleStatus.PUBLISHED,
      categoryKey: "forms-buttons",
      tags: JSON.stringify(["html", "—Ñ–æ—Ä–º—ã", "–∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è"]),
      metaTitle: "HTML —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã CryptoCloud",
      metaDescription: "–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω—ã—Ö —Ñ–æ—Ä–º –æ–ø–ª–∞—Ç—ã —Å CryptoCloud API",
      authorId: admin.id,
      viewCount: 634,
    },
  ];

  for (const articleData of articles) {
    const article = await prisma.article.upsert({
      where: { slug: articleData.slug },
      update: {},
      create: articleData,
    });
    console.log("‚úÖ –°—Ç–∞—Ç—å—è –≥–æ—Ç–æ–≤–∞:", article.title);
  }

  // –°–æ–∑–¥–∞–µ–º API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
  const apiEndpoints = [
    {
      name: "–°–æ–∑–¥–∞–Ω–∏–µ —Å—á–µ—Ç–∞",
      method: HttpMethod.POST,
      path: "/v2/invoice/create",
      description: "–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å—á–µ—Ç–∞ –¥–ª—è –ø—Ä–∏–µ–º–∞ –ø–ª–∞—Ç–µ–∂–µ–π",
      parameters: JSON.stringify({
        amount: { type: "number", required: true, description: "–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ" },
        currency: { type: "string", required: true, description: "–í–∞–ª—é—Ç–∞ (USD, EUR, RUB)" },
        order_id: { type: "string", required: false, description: "ID –∑–∞–∫–∞–∑–∞" },
        email: { type: "string", required: false, description: "Email –ø–ª–∞—Ç–µ–ª—å—â–∏–∫–∞" },
        description: { type: "string", required: false, description: "–û–ø–∏—Å–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞" },
        success_url: { type: "string", required: false, description: "URL —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã" },
        fail_url: { type: "string", required: false, description: "URL –Ω–µ—É–¥–∞—á–Ω–æ–π –æ–ø–ª–∞—Ç—ã" },
      }),
      responses: JSON.stringify({
        "200": {
          status: "success",
          result: {
            uuid: "d24a5a94-8604-4d8e-b6e3-2b5e6f7a8b9c",
            link: "https://pay.cryptocloud.plus/d24a5a94",
            amount: 100,
            currency: "USD",
            status: "created",
            created_at: "2024-01-15T10:30:00Z",
            expires_at: "2024-01-15T11:30:00Z"
          }
        }
      }),
      examples: JSON.stringify({
        request: {
          amount: 100,
          currency: "USD",
          order_id: "order_12345",
          email: "user@example.com",
          description: "Premium –ø–æ–¥–ø–∏—Å–∫–∞"
        }
      }),
      version: "v2",
    },
    {
      name: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—á–µ—Ç–µ",
      method: HttpMethod.GET,
      path: "/v2/invoice/info",
      description: "–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—á–µ—Ç–µ",
      parameters: JSON.stringify({
        uuid: { type: "string", required: true, description: "UUID —Å—á–µ—Ç–∞" }
      }),
      responses: JSON.stringify({
        "200": {
          status: "success",
          result: {
            uuid: "d24a5a94-8604-4d8e-b6e3-2b5e6f7a8b9c",
            amount: 100,
            currency: "USD",
            status: "paid",
            crypto_amount: "0.00234567",
            crypto_currency: "BTC",
            network: "Bitcoin",
            address: "bc1qxy2kgdygjrsqtzq2n0yrf2493p83kkfjhx0wlh",
            txid: "8a5b2c3d4e5f6a7b8c9d0e1f2a3b4c5d6e7f8a9b0c1d2e3f4a5b6c7d8e9f0a1b2"
          }
        }
      }),
      version: "v2",
    },
    {
      name: "–ü–æ–ª—É—á–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞",
      method: HttpMethod.GET,
      path: "/v2/balance",
      description: "–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞",
      parameters: JSON.stringify({}),
      responses: JSON.stringify({
        "200": {
          status: "success",
          result: {
            USD: 1250.50,
            EUR: 890.25,
            RUB: 75000.00,
            BTC: 0.05432,
            ETH: 1.234,
            USDT: 1200.00
          }
        }
      }),
      version: "v2",
    },
    {
      name: "–°–ø–∏—Å–æ–∫ —Å—á–µ—Ç–æ–≤",
      method: HttpMethod.GET,
      path: "/v2/invoices",
      description: "–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö —Å—á–µ—Ç–æ–≤",
      parameters: JSON.stringify({
        limit: { type: "number", required: false, description: "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π (–º–∞–∫—Å. 100)" },
        offset: { type: "number", required: false, description: "–°–º–µ—â–µ–Ω–∏–µ –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏" },
        status: { type: "string", required: false, description: "–§–∏–ª—å—Ç—Ä –ø–æ —Å—Ç–∞—Ç—É—Å—É" },
        date_from: { type: "string", required: false, description: "–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ (YYYY-MM-DD)" },
        date_to: { type: "string", required: false, description: "–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è (YYYY-MM-DD)" },
      }),
      responses: JSON.stringify({
        "200": {
          status: "success",
          result: {
            invoices: [
              {
                uuid: "d24a5a94-8604-4d8e-b6e3-2b5e6f7a8b9c",
                amount: 100,
                currency: "USD",
                status: "paid",
                created_at: "2024-01-15T10:30:00Z"
              }
            ],
            total: 1,
            limit: 50,
            offset: 0
          }
        }
      }),
      version: "v2",
    },
    {
      name: "–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç",
      method: HttpMethod.GET,
      path: "/v2/rates",
      description: "–ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∫—É—Ä—Å–æ–≤ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç",
      parameters: JSON.stringify({
        currency: { type: "string", required: false, description: "–§–∏–∞—Ç –≤–∞–ª—é—Ç–∞ (USD, EUR, RUB)" }
      }),
      responses: JSON.stringify({
        "200": {
          status: "success",
          result: {
            USD: {
              BTC: 42500.50,
              ETH: 2650.75,
              USDT: 1.00,
              LTC: 95.30
            }
          }
        }
      }),
      version: "v2",
    },
    {
      name: "–°–æ–∑–¥–∞–Ω–∏–µ –≤—ã–≤–æ–¥–∞",
      method: HttpMethod.POST,
      path: "/v2/withdrawal/create",
      description: "–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤",
      parameters: JSON.stringify({
        currency: { type: "string", required: true, description: "–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞ (BTC, ETH, USDT)" },
        amount: { type: "number", required: true, description: "–°—É–º–º–∞ –∫ –≤—ã–≤–æ–¥—É" },
        address: { type: "string", required: true, description: "–ê–¥—Ä–µ—Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è" },
        network: { type: "string", required: false, description: "–°–µ—Ç—å (–¥–ª—è USDT: TRC20, ERC20)" }
      }),
      responses: JSON.stringify({
        "200": {
          status: "success",
          result: {
            id: "withdrawal_123",
            currency: "BTC",
            amount: 0.01,
            address: "bc1qxy2kgdygjrsqtzq2n0yrf2493p83kkfjhx0wlh",
            status: "pending",
            fee: 0.0001
          }
        }
      }),
      version: "v2",
    },
    {
      name: "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
      method: HttpMethod.GET,
      path: "/v2/statistics",
      description: "–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –ø–ª–∞—Ç–µ–∂–∞–º",
      parameters: JSON.stringify({
        period: { type: "string", required: false, description: "–ü–µ—Ä–∏–æ–¥: day, week, month, year" },
        currency: { type: "string", required: false, description: "–§–∏–ª—å—Ç—Ä –ø–æ –≤–∞–ª—é—Ç–µ" }
      }),
      responses: JSON.stringify({
        "200": {
          status: "success",
          result: {
            total_amount: 15420.50,
            total_count: 89,
            successful_payments: 85,
            failed_payments: 4,
            average_amount: 173.26
          }
        }
      }),
      version: "v2",
    },
    {
      name: "Webhook —Ç–µ—Å—Ç",
      method: HttpMethod.POST,
      path: "/v2/webhook/test",
      description: "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ webhook URL",
      parameters: JSON.stringify({
        url: { type: "string", required: true, description: "URL –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è" }
      }),
      responses: JSON.stringify({
        "200": {
          status: "success",
          result: {
            url: "https://example.com/webhook",
            response_code: 200,
            response_time: 450,
            test_successful: true
          }
        }
      }),
      version: "v2",
    },
  ];

  for (const endpointData of apiEndpoints) {
    const endpoint = await prisma.apiEndpoint.upsert({
      where: {
        method_path_version: {
          method: endpointData.method,
          path: endpointData.path,
          version: endpointData.version || "v2",
        },
      },
      update: {},
      create: endpointData,
    });
    console.log("‚úÖ API —ç–Ω–¥–ø–æ–∏–Ω—Ç –≥–æ—Ç–æ–≤:", endpoint.name);
  }

  // –°–æ–∑–¥–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∞–π—Ç–∞
  const siteSettings = [
    { key: "site_title", value: "CryptoCloud API Documentation", type: "string" },
    { key: "site_description", value: "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø–æ API –¥–ª—è –ø—Ä–∏–µ–º–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π", type: "string" },
    { key: "contact_email", value: "support@cryptocloud.plus", type: "string" },
    { key: "api_version", value: "v2", type: "string" },
    { key: "enable_comments", value: "true", type: "boolean" },
    { key: "enable_analytics", value: "true", type: "boolean" },
    { key: "max_articles_per_page", value: "10", type: "number" },
  ];

  for (const setting of siteSettings) {
    await prisma.siteSetting.upsert({
      where: { key: setting.key },
      update: setting,
      create: setting,
    });
  }

  console.log("‚úÖ –°–æ–∑–¥–∞–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∞–π—Ç–∞");

  // –°–æ–∑–¥–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
  const commentUsers = [
    {
      email: "alex@example.com",
      name: "–ê–ª–µ–∫—Å–µ–π –ü–µ—Ç—Ä–æ–≤",
      password: await bcrypt.hash("user123", 10),
      role: UserRole.USER,
      status: UserStatus.APPROVED,
      telegram: "@alex_petrov",
    },
    {
      email: "maria@example.com", 
      name: "–ú–∞—Ä–∏—è –ò–≤–∞–Ω–æ–≤–∞",
      password: await bcrypt.hash("user123", 10),
      role: UserRole.USER,
      status: UserStatus.APPROVED,
      telegram: "@maria_ivanova",
    },
    {
      email: "dmitry@example.com",
      name: "–î–º–∏—Ç—Ä–∏–π –°–∏–¥–æ—Ä–æ–≤", 
      password: await bcrypt.hash("user123", 10),
      role: UserRole.USER,
      status: UserStatus.PENDING,
      telegram: "@dmitry_sidorov",
    },
  ];

  const createdCommentUsers = [];
  for (const userData of commentUsers) {
    const user = await prisma.user.create({
      data: userData,
    });
    createdCommentUsers.push(user);
  }

  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
  const comments = [
    {
      content: "–û—Ç–ª–∏—á–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è! –û—á–µ–Ω—å –ø–æ–º–æ–≥–ª–∞ –≤ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏.",
      status: "APPROVED",
      articleIndex: 0,
      authorIndex: 0,
    },
    {
      content: "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥—Ä–æ–±–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã –∫–æ–¥–∞. –í—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ –æ–ø–∏—Å–∞–Ω–æ.",
      status: "APPROVED",
      articleIndex: 0,
      authorIndex: 1,
    },
    {
      content: "–ë—ã–ª–æ –±—ã –∑–¥–æ—Ä–æ–≤–æ –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ –ø—Ä–∏–º–µ—Ä–æ–≤ –Ω–∞ Python.",
      status: "APPROVED",
      articleIndex: 1,
      authorIndex: 2,
    },
  ];

  // –ü–æ–ª—É—á–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ç—å–∏ –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
  const createdArticles = await prisma.article.findMany();
  
  for (const comment of comments) {
    if (createdArticles[comment.articleIndex] && createdCommentUsers[comment.authorIndex]) {
      await prisma.comment.create({
        data: {
          content: comment.content,
          status: comment.status as any,
          articleId: createdArticles[comment.articleIndex].id,
          authorId: createdCommentUsers[comment.authorIndex].id,
        },
      });
    }
  }

  console.log("‚úÖ –°–æ–∑–¥–∞–Ω—ã —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏");

  // –°–æ–∑–¥–∞–µ–º –æ—Ç–∑—ã–≤—ã
  const feedbacks = [
    {
      type: FeedbackType.HELPFUL,
      message: "API –æ—á–µ–Ω—å —É–¥–æ–±–Ω—ã–π –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏!",
      rating: 5,
      articleId: createdArticles[0]?.id,
    },
    {
      type: FeedbackType.RATING, 
      message: "–î–æ–±–∞–≤—å—Ç–µ –ø–æ–¥–¥–µ—Ä–∂–∫—É GraphQL API",
      rating: 4,
      articleId: createdArticles[1]?.id,
    },
    {
      type: FeedbackType.NOT_HELPFUL,
      message: "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Å–ª–∏—à–∫–æ–º —Å–ª–æ–∂–Ω–∞—è –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤",
      rating: 2,
      articleId: createdArticles[2]?.id,
    },
  ];

  for (const feedback of feedbacks) {
    if (feedback.articleId) {
      await prisma.feedback.create({
        data: feedback,
      });
    }
  }

  console.log("‚úÖ –°–æ–∑–¥–∞–Ω—ã –æ—Ç–∑—ã–≤—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π");

  // –°–æ–∑–¥–∞–µ–º –ø–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã
  const searchQueries = [
    { query: "—Å–æ–∑–¥–∞–Ω–∏–µ —Å—á–µ—Ç–∞", results: 5 },
    { query: "api –∫–ª—é—á–∏", results: 3 },
    { query: "webhook", results: 4 },
    { query: "wordpress", results: 2 },
    { query: "—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ", results: 6 },
    { query: "–±–∞–ª–∞–Ω—Å", results: 2 },
    { query: "–∫—É—Ä—Å—ã –≤–∞–ª—é—Ç", results: 1 },
    { query: "–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è", results: 8 },
  ];

  for (const sq of searchQueries) {
    await prisma.searchQuery.create({
      data: sq,
    });
  }

  console.log("‚úÖ –°–æ–∑–¥–∞–Ω—ã –ø–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã");

  // –°–æ–∑–¥–∞–µ–º –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–±—ã—Ç–∏—è
  const analyticsEvents = [
    { event: "page_view", data: JSON.stringify({ page: "/overview", referrer: "google.com" }) },
    { event: "page_view", data: JSON.stringify({ page: "/quick-start", referrer: "direct" }) },
    { event: "page_view", data: JSON.stringify({ page: "/api/auth", referrer: "docs.cryptocloud.plus" }) },
    { event: "search", data: JSON.stringify({ page: "/", query: "—Å–æ–∑–¥–∞–Ω–∏–µ —Å—á–µ—Ç–∞" }) },
    { event: "search", data: JSON.stringify({ page: "/", query: "webhook" }) },
    { event: "button_click", data: JSON.stringify({ page: "/", button: "theme_toggle" }) },
    { event: "api_docs_view", data: JSON.stringify({ page: "/api/invoice-create", endpoint: "POST /v2/invoice/create" }) },
  ];

  for (const event of analyticsEvents) {
    await prisma.analytics.create({
      data: event,
    });
  }

  console.log("‚úÖ –°–æ–∑–¥–∞–Ω—ã –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–±—ã—Ç–∏—è");

  console.log("üéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞!");
}

main()
  .then(async () => {
    await prisma.$disconnect();
  })
  .catch(async (e) => {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –ë–î:", e);
    await prisma.$disconnect();
    process.exit(1);
  });
